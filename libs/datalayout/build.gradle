plugins {
    id 'openhouse.java-conventions'
    id 'openhouse.hadoop-conventions'
    id 'openhouse.maven-publish'
}

ext {
    icebergVersion = '1.2.0'
    sparkVersion = '3.1.1'
    springVersion = '2.7.8'
    hadoopVersion = '2.10.0'
    sparkVersionSuffix = "3.1"
    openhouseSparkRuntimeModule = ":integrations:spark:spark-${sparkVersionSuffix}:openhouse-spark-runtime_2.12"
    tablesTestFixturesModule = ":tables-test-fixtures:tables-test-fixtures_2.12"
}

dependencies {
    compileOnly project(openhouseSparkRuntimeModule)
    implementation('org.apache.iceberg:iceberg-bundled-guava:' + icebergVersion)
    implementation('org.apache.iceberg:iceberg-data:' + icebergVersion)
    implementation('org.apache.iceberg:iceberg-core:' + icebergVersion)
    implementation('org.apache.iceberg:iceberg-common:' + icebergVersion)
    implementation('org.testcontainers:testcontainers:1.19.8')
    implementation ('org.apache.spark:spark-core_2.12:' + sparkVersion) {
        exclude group: 'io.netty'
        exclude group: 'org.apache.hadoop', module: 'hadoop-common'
        exclude group: 'org.apache.hadoop', module: 'hadoop-client'
    }
    implementation ('org.apache.spark:spark-sql_2.12:' + sparkVersion) {
        exclude group: 'io.netty'
        exclude group: 'org.apache.hadoop', module: 'hadoop-common'
        exclude group: 'org.apache.hadoop', module: 'hadoop-client'
    }
    implementation 'org.apache.hadoop:hadoop-common:' + hadoopVersion
    implementation 'org.apache.iceberg:iceberg-spark-runtime-3.1_2.12:' + icebergVersion

    testImplementation (project(path: openhouseSparkRuntimeModule, configuration: 'shadow')) {
        exclude group: 'io.netty'
        exclude group: 'org.apache.hadoop', module: 'hadoop-common'
        exclude group: 'org.apache.hadoop', module: 'hadoop-client'
    }

    // Otherwise throws the error: Scala module 2.10.0 requires Jackson Databind version >= 2.10.0 and < 2.11.0
    testImplementation 'com.fasterxml.jackson.module:jackson-module-scala_2.12:2.13.1'
    testImplementation 'org.mockito:mockito-inline:4.11.0'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation(project(tablesTestFixturesModule))
    testRuntimeOnly("org.eclipse.jetty:jetty-server:11.0.2")
}

test {
    if (JavaVersion.current() >= JavaVersion.VERSION_1_9) {
        jvmArgs \
            '--add-opens=java.base/java.nio=ALL-UNNAMED',
            '--add-exports=java.base/sun.nio.ch=ALL-UNNAMED',
            '--add-opens=java.base/sun.util.calendar=ALL-UNNAMED',
            '--add-exports=java.base/sun.util.calendar=ALL-UNNAMED'
    }
}